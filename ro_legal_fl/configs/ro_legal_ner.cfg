[paths]
train = null
dev = null
vectors = null
init_tok2vec = null
parser_tagger_path = null

[system]
gpu_allocator = null
seed = 0

[nlp]
lang = "ro"
pipeline = ["tok2vec", "tagger", "morphologizer",  "parser", "lemmatizer",  "attribute_ruler", "ner"]
before_creation = null
after_creation = null
after_pipeline_creation = null
batch_size = 512
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]


[components.morphologizer]
source = ${paths.parser_tagger_path}

[components.attribute_ruler]
source = ${paths.parser_tagger_path}

[components.lemmatizer]
source = ${paths.parser_tagger_path}

[components.parser]
source = ${paths.parser_tagger_path}

#[components.senter]
#source = ${paths.parser_tagger_path}


[components.tagger]
source = ${paths.parser_tagger_path}


[components.tok2vec]
source = ${paths.parser_tagger_path}



######################
[components.ner]
factory = "ner"
incorrect_spans_key = null
moves = null
scorer = {"@scorers":"spacy.ner_scorer.v1"}
update_with_oracle_cut_size = 100

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = true
nO = null


#[components.ner.model.tok2vec]
#@architectures = "spacy.Tok2VecListener.v1"
#width = ${components.tok2vec.model.encode.width}
#upstream = "*"



######################



[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
gold_preproc = false
max_length = 0
limit = 0
augmenter = null

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
gold_preproc = false
max_length = 0
limit = 0
augmenter = null

[training]
train_corpus = "corpora.train"
dev_corpus = "corpora.dev"
seed = ${system:seed}
gpu_allocator = ${system:gpu_allocator}
dropout = 0.1
accumulate_gradient = 1
patience = 5000
max_epochs = 0
max_steps = 100000
eval_frequency = 1000
before_to_disk = null
annotating_components = []
before_update = null
#frozen_components = ["morphologizer", "tagger", "parser", "lemmatizer", "attribute_ruler"]
frozen_components = ["tok2vec","tagger","morphologizer","parser","lemmatizer","attribute_ruler"]

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2
get_length = null

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001
t = 0.0

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = false

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = true
eps = 0.00000001
learn_rate = 0.001

[training.score_weights]
tag_acc = 0.29
dep_uas = 0.0
dep_las = 0.29
dep_las_per_type = null
sents_p = null
sents_r = null
sents_f = 0.04
lemma_acc = 0.1
ents_f = 0.29
ents_p = 0.0
ents_r = 0.0
ents_per_type = null
speed = 0.0

[pretraining]

[initialize]
vocab_data = null
vectors = ${paths.vectors}
init_tok2vec = ${paths.init_tok2vec}
after_init = null


[initialize.before_init]
@callbacks = "spacy.copy_from_base_model.v1"
tokenizer = ${paths.parser_tagger_path}
vocab = ${paths.parser_tagger_path}



[initialize.components]

####################################
[initialize.components.ner]

[initialize.components.ner.labels]
@readers = "spacy.read_labels.v1"
path = "corpus/labels/ner.json"
require = false
#####################################

[initialize.tokenizer]
